{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luminary\\\\Projects\\\\KDS\\\\client\\\\src\\\\layout\\\\loginForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AdminConsumer } from '../contexts/adminContext';\nimport { Redirect } from 'react-router-dom';\nexport class loginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"gurk\",\n      password: \"123\",\n      message: \"\",\n      redirect: false,\n      admins: [{\n        id: \"-\",\n        name: \"-\",\n        lastname: \"-\",\n        username: \"-\",\n        mail: \"-\",\n        password: \"-\"\n      }]\n    };\n\n    this.changeInput = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/target\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.loginValid = async input => {\n      const response = await fetch(`/api/admin/getByUsername/${input.username}`);\n      const admins = await response.json();\n      console.log({\n        admins\n      });\n\n      if (admins === []) {\n        this.setState({\n          message: \"wrong username\",\n          redirect: false\n        });\n      } else {\n        for (let admin of admins) {\n          let inputPassword = input.password;\n          let password = admin.password;\n\n          if (password !== inputPassword) {\n            this.setState({\n              message: \"wrong password\",\n              redirect: false\n            });\n          } else {\n            this.setState({\n              message: \"\",\n              redirect: true\n            });\n            localStorage.setItem('current', JSON.stringify({\n              loggedAdmin: admin,\n              isValid: true\n            }));\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(AdminConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, ({\n      dispatch,\n      message\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"username\",\n        className: \"formCenter\",\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: this.changeInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"password\",\n        className: \"formCenter\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: this.changeInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"loginButton\",\n        className: \"formCenter\",\n        onClick: e => dispatch({\n          type: \"adminIsValid\",\n          payload: this.state\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }, \"Login \"), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"formCenter\",\n        id: \"message\",\n        onChange: this.changeInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }, message), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        className: \"formCenter\",\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, \" Sign Up \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        className: \"formCenter\",\n        to: \"/forgatpass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, \" Forgat Password \"));\n    });\n  }\n\n}\nexport default loginForm;","map":{"version":3,"sources":["C:/Users/luminary/Projects/KDS/client/src/layout/loginForm.js"],"names":["React","Component","Link","AdminConsumer","Redirect","loginForm","state","username","password","message","redirect","admins","id","name","lastname","mail","changeInput","e","setState","target","value","renderRedirect","loginValid","input","response","fetch","json","console","log","admin","inputPassword","localStorage","setItem","JSON","stringify","loggedAdmin","isValid","render","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AdminConsumer } from '../contexts/adminContext'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nexport class loginForm extends Component {\r\n    state = {\r\n\r\n        username: \"gurk\",\r\n        password: \"123\",\r\n        message: \"\",\r\n        redirect: false,\r\n        admins: [{\r\n            id: \"-\",\r\n            name: \"-\",\r\n            lastname: \"-\",\r\n            username: \"-\",\r\n            mail: \"-\",\r\n            password: \"-\"\r\n        }]\r\n    };\r\n\r\n\r\n    changeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n\r\n    }; \r\n    \r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/target' />\r\n        }\r\n    }\r\n\r\n    loginValid = async (input) => {\r\n        const response = await fetch(`/api/admin/getByUsername/${input.username}`)\r\n        const admins = await response.json();\r\n        console.log({admins})\r\n        if (admins === []) {\r\n            this.setState({ message: \"wrong username\", redirect: false});\r\n        } else {\r\n            for (let admin of admins) {\r\n                let inputPassword = input.password;\r\n                let password = admin.password;\r\n\r\n                if(password !== inputPassword){\r\n                    this.setState({ message: \"wrong password\", redirect: false});\r\n                }else{\r\n                    this.setState({ message: \"\" , redirect: true});\r\n                    localStorage.setItem('current', JSON.stringify({ loggedAdmin: admin, isValid: true }));\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { username, password } = this.state\r\n        return (\r\n            <AdminConsumer>\r\n                {\r\n                    ({dispatch, message}) => {\r\n                        return (\r\n                            <div className=\"center\" >\r\n                            <hr />\r\n                            <input id=\"username\"\r\n                                className=\"formCenter\"\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                value={username}\r\n                                onChange={this.changeInput} />\r\n                            <br />\r\n                            <input id=\"password\"\r\n                                className=\"formCenter\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={this.changeInput} />\r\n                            <hr />\r\n                            <button id=\"loginButton\" className=\"formCenter\" \r\n                            onClick={e => dispatch({ type: \"adminIsValid\", payload: this.state })}> \r\n                            Login </button>\r\n                            <h6 className=\"formCenter\" id=\"message\" onChange={this.changeInput}   >{message}</h6>\r\n\r\n                            <br />\r\n                            <Link className=\"formCenter\" to=\"/signup\" > Sign Up </Link>\r\n                            <br />\r\n                            <Link className=\"formCenter\" to=\"/forgatpass\" > Forgat Password </Link>\r\n                        </div>\r\n                        );\r\n                    }\r\n                }\r\n            </AdminConsumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default loginForm\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}