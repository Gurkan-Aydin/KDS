{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luminary\\\\Projects\\\\KDS\\\\client\\\\src\\\\contexts\\\\adminContext.js\";\nimport React from \"react\";\nconst Context = React.createContext();\nexport class adminContext extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isValid: false,\n      loggedAdmin: [],\n      dispatch: action => {\n        this.setState(this.reducer(action));\n      }\n    };\n\n    this.reducer = action => {\n      switch (action.type) {\n        case \"adminIsValid\":\n          this.changeValid(action.payload);\n          break;\n\n        default:\n          console.log(\"wrong admin acation\");\n      }\n    };\n\n    this.changeValid = input => {\n      fetch(`/api/admin/getByUsername/${input.username}`).then(res => res.json()).then(admins => {\n        if (admins === []) return console.log(\"wrong username\");\n\n        for (let admin of admins) {\n          let inputPassword = input.password;\n          let password = admin.password;\n\n          if (inputPassword === password) {\n            this.setState({\n              isValid: true,\n              loggedAdmin: admin\n            });\n            this.props.history.push(\"/index\");\n            return;\n          } else {\n            console.log(\"wrong password\");\n          }\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      state,\n      props: {\n        children\n      }\n    } = this;\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }, children);\n  }\n\n}\nexport const AdminConsumer = Context.Consumer;","map":{"version":3,"sources":["C:/Users/luminary/Projects/KDS/client/src/contexts/adminContext.js"],"names":["React","Context","createContext","adminContext","Component","state","isValid","loggedAdmin","dispatch","action","setState","reducer","type","changeValid","payload","console","log","input","fetch","username","then","res","json","admins","admin","inputPassword","password","props","history","push","render","children","AdminConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,aAAN,EAAhB;AAGA,OAAO,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAE9CC,KAF8C,GAEtC;AACJC,MAAAA,OAAO,EAAE,KADL;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,QAAQ,EAAEC,MAAM,IAAI;AAChB,aAAKC,QAAL,CAAc,KAAKC,OAAL,CAAaF,MAAb,CAAd;AACH;AALG,KAFsC;;AAAA,SAU9CE,OAV8C,GAUnCF,MAAD,IAAY;AAClB,cAAQA,MAAM,CAACG,IAAf;AACI,aAAK,cAAL;AACI,eAAKC,WAAL,CAAiBJ,MAAM,CAACK,OAAxB;AACA;;AACJ;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AALR;AAOH,KAlB6C;;AAAA,SAoB9CH,WApB8C,GAoB/BI,KAAD,IAAW;AACrBC,MAAAA,KAAK,CAAE,4BAA2BD,KAAK,CAACE,QAAS,EAA5C,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZ,YAAIA,MAAM,KAAK,EAAf,EAAmB,OAAOR,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAP;;AACnB,aAAK,IAAIQ,KAAT,IAAkBD,MAAlB,EAA0B;AACtB,cAAIE,aAAa,GAAGR,KAAK,CAACS,QAA1B;AACA,cAAIA,QAAQ,GAAGF,KAAK,CAACE,QAArB;;AAEA,cAAID,aAAa,KAAKC,QAAtB,EAAgC;AAC5B,iBAAKhB,QAAL,CAAc;AACVJ,cAAAA,OAAO,EAAE,IADC;AAEVC,cAAAA,WAAW,EAAEiB;AAFH,aAAd;AAIA,iBAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACA;AACH,WAPD,MAOO;AACHd,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ;AACJ,OAnBL;AAoBH,KAzC6C;AAAA;;AA2C9Cc,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEzB,MAAAA,KAAF;AAASsB,MAAAA,KAAK,EAAE;AAAEI,QAAAA;AAAF;AAAhB,QAAiC,IAAvC;AACA,wBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE1B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC0B,QAAjC,CAAP;AACH;;AA9C6C;AAiDlD,OAAO,MAAMC,aAAa,GAAG/B,OAAO,CAACgC,QAA9B","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\n\r\nexport class adminContext extends React.Component {\r\n\r\n    state = {\r\n        isValid: false,\r\n        loggedAdmin: [],\r\n        dispatch: action => {\r\n            this.setState(this.reducer(action));\r\n        }\r\n    };\r\n\r\n    reducer = (action) => {\r\n        switch (action.type) {\r\n            case \"adminIsValid\":\r\n                this.changeValid(action.payload);\r\n                break;\r\n            default:\r\n                console.log(\"wrong admin acation\")\r\n        }\r\n    };\r\n\r\n    changeValid = (input) => {\r\n        fetch(`/api/admin/getByUsername/${input.username}`)\r\n            .then(res => res.json())\r\n            .then(admins => {\r\n                if (admins === []) return console.log(\"wrong username\");\r\n                for (let admin of admins) {\r\n                    let inputPassword = input.password;\r\n                    let password = admin.password;\r\n                    \r\n                    if (inputPassword === password) {\r\n                        this.setState({ \r\n                            isValid: true, \r\n                            loggedAdmin: admin,\r\n                        })\r\n                        this.props.history.push(\"/index\")\r\n                        return;\r\n                    } else {\r\n                        console.log(\"wrong password\");\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { state, props: { children } } = this;\r\n        return <Context.Provider value={state}>{children}</Context.Provider>;\r\n    }\r\n}\r\n\r\nexport const AdminConsumer = Context.Consumer;"]},"metadata":{},"sourceType":"module"}