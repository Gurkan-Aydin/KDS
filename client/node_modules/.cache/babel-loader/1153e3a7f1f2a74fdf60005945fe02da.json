{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luminary\\\\Projects\\\\KDS\\\\client\\\\src\\\\contexts\\\\adminContext.js\";\nimport React from \"react\";\nconst Context = React.createContext();\nexport class AdminProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isValid: false,\n      loggedAdmin: [],\n      message: \"\",\n      dispatch: (action, callback) => {\n        this.setState(this.reducer(action));\n        callback();\n      }\n    };\n\n    this.reducer = action => {\n      switch (action.type) {\n        case \"adminIsValid\":\n          this.changeValid(action.payload);\n          this.setState({\n            message: \"\"\n          });\n          break;\n\n        default:\n          this.setState({\n            message: \"wrong admin acation\"\n          });\n      }\n    };\n\n    this.changeValid = async input => {\n      const response = await fetch(`/api/admin/getByUsername/${input.username}`);\n      const admins = await response.json();\n\n      if (admins === []) {\n        this.setState({\n          message: \"wrong username\"\n        });\n        callback(false);\n      } else {\n        for (let admin of admins) {\n          let inputPassword = input.password;\n          let password = admin.password;\n\n          if (password !== inputPassword) {\n            this.setState({\n              message: \"wrong password\"\n            });\n            callback(false);\n          } else {\n            this.setState({\n              message: \"\"\n            });\n            callback(true);\n            this.props.history.push(\"/index\");\n            localStorage.setItem('current', JSON.stringify({\n              loggedAdmin: admin,\n              isValid: true\n            }));\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      state,\n      props: {\n        children\n      }\n    } = this;\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    }, children);\n  }\n\n}\nexport const AdminConsumer = Context.Consumer;","map":{"version":3,"sources":["C:/Users/luminary/Projects/KDS/client/src/contexts/adminContext.js"],"names":["React","Context","createContext","AdminProvider","Component","state","isValid","loggedAdmin","message","dispatch","action","callback","setState","reducer","type","changeValid","payload","input","response","fetch","username","admins","json","admin","inputPassword","password","props","history","push","localStorage","setItem","JSON","stringify","render","children","AdminConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,aAAN,EAAhB;AAGA,OAAO,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAE/CC,KAF+C,GAEvC;AACJC,MAAAA,OAAO,EAAE,KADL;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,OAAO,EAAE,EAHL;AAIJC,MAAAA,QAAQ,EAAE,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC5B,aAAKC,QAAL,CAAc,KAAKC,OAAL,CAAaH,MAAb,CAAd;AACAC,QAAAA,QAAQ;AACX;AAPG,KAFuC;;AAAA,SAY/CE,OAZ+C,GAYpCH,MAAD,IAAY;AAClB,cAAQA,MAAM,CAACI,IAAf;AACI,aAAK,cAAL;AACI,eAAKC,WAAL,CAAiBL,MAAM,CAACM,OAAxB;AACA,eAAKJ,QAAL,CAAc;AACVJ,YAAAA,OAAO,EAAE;AADC,WAAd;AAGA;;AACJ;AACI,eAAKI,QAAL,CAAc;AACVJ,YAAAA,OAAO,EAAE;AADC,WAAd;AARR;AAYH,KAzB8C;;AAAA,SA2B/CO,WA3B+C,GA2BjC,MAAOE,KAAP,IAAiB;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4BAA2BF,KAAK,CAACG,QAAS,EAA5C,CAA5B;AACA,YAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB;;AACA,UAAID,MAAM,KAAK,EAAf,EAAmB;AACf,aAAKT,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAE;AAAX,SAAd;AACAG,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,OAHD,MAGO;AACH,aAAK,IAAIY,KAAT,IAAkBF,MAAlB,EAA0B;AACtB,cAAIG,aAAa,GAAGP,KAAK,CAACQ,QAA1B;AACA,cAAIA,QAAQ,GAAGF,KAAK,CAACE,QAArB;;AAEA,cAAGA,QAAQ,KAAKD,aAAhB,EAA8B;AAC1B,iBAAKZ,QAAL,CAAc;AAAEJ,cAAAA,OAAO,EAAE;AAAX,aAAd;AACAG,YAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,WAHD,MAGK;AACD,iBAAKC,QAAL,CAAc;AAAEJ,cAAAA,OAAO,EAAE;AAAX,aAAd;AACAG,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,iBAAKe,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACAC,YAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAe;AAAEzB,cAAAA,WAAW,EAAEgB,KAAf;AAAsBjB,cAAAA,OAAO,EAAE;AAA/B,aAAf,CAAhC;AACH;AACJ;AACJ;AACJ,KAjD8C;AAAA;;AAmD/C2B,EAAAA,MAAM,GAAG;AACL,UAAM;AAAE5B,MAAAA,KAAF;AAASqB,MAAAA,KAAK,EAAE;AAAEQ,QAAAA;AAAF;AAAhB,QAAiC,IAAvC;AACA,wBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE7B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC6B,QAAjC,CAAP;AACH;;AAtD8C;AAyDnD,OAAO,MAAMC,aAAa,GAAGlC,OAAO,CAACmC,QAA9B","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\n\r\nexport class AdminProvider extends React.Component {\r\n\r\n    state = {\r\n        isValid: false,\r\n        loggedAdmin: [],\r\n        message: \"\",\r\n        dispatch: (action, callback) => {\r\n            this.setState(this.reducer(action));\r\n            callback();\r\n        }\r\n    };\r\n\r\n    reducer = (action) => {\r\n        switch (action.type) {\r\n            case \"adminIsValid\":\r\n                this.changeValid(action.payload);\r\n                this.setState({\r\n                    message: \"\"\r\n                })\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    message: \"wrong admin acation\"\r\n                })\r\n        }\r\n    };\r\n\r\n    changeValid = async (input) => {\r\n        const response = await fetch(`/api/admin/getByUsername/${input.username}`)\r\n        const admins = await response.json();\r\n        if (admins === []) {\r\n            this.setState({ message: \"wrong username\" });\r\n            callback(false)\r\n        } else {\r\n            for (let admin of admins) {\r\n                let inputPassword = input.password;\r\n                let password = admin.password;\r\n\r\n                if(password !== inputPassword){\r\n                    this.setState({ message: \"wrong password\"});\r\n                    callback(false);\r\n                }else{\r\n                    this.setState({ message: \"\" });\r\n                    callback(true);\r\n                    this.props.history.push(\"/index\")\r\n                    localStorage.setItem('current', JSON.stringify({ loggedAdmin: admin, isValid: true }));\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { state, props: { children } } = this;\r\n        return <Context.Provider value={state}>{children}</Context.Provider>;\r\n    }\r\n}\r\n\r\nexport const AdminConsumer = Context.Consumer;"]},"metadata":{},"sourceType":"module"}