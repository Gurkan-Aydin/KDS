{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luminary\\\\Projects\\\\KDS\\\\client\\\\src\\\\layout\\\\loginForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nexport class loginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"gurk\",\n      password: \"123\",\n      message: \"\",\n      redirect: false,\n      admins: [{\n        id: \"-\",\n        name: \"-\",\n        lastname: \"-\",\n        username: \"-\",\n        mail: \"-\",\n        password: \"-\"\n      }]\n    };\n\n    this.changeInput = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/index\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.loginValid = async () => {\n      let input = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      const response = await fetch(`/api/admin/getByUsername/${input.username}`);\n      const admins = await response.json();\n\n      if (admins.length === 0) {\n        this.setState({\n          message: \"wrong username\",\n          redirect: false\n        });\n      } else {\n        for (let admin of admins) {\n          let inputPassword = input.password;\n          let password = admin.password;\n\n          if (password !== inputPassword) {\n            this.setState({\n              message: \"wrong password\",\n              redirect: false\n            });\n          } else {\n            this.setState({\n              message: \"\",\n              redirect: true\n            });\n            await localStorage.setItem('currentAdmin', JSON.stringify({\n              loggedAdmin: admin,\n              isValid: true\n            }));\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      message\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"username\",\n      className: \"formCenter\",\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: this.changeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"password\",\n      className: \"formCenter\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: this.changeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"loginButton\",\n      className: \"formCenter\",\n      onClick: this.loginValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \" Login \"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"formCenter\",\n      id: \"message\",\n      onChange: this.changeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, message), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      className: \"formCenter\",\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \" Sign Up \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      className: \"formCenter\",\n      to: \"/forgatpass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \" Forgat Password \"), this.renderRedirect());\n  }\n\n}\nexport default loginForm;","map":{"version":3,"sources":["C:/Users/luminary/Projects/KDS/client/src/layout/loginForm.js"],"names":["React","Component","Link","Redirect","loginForm","state","username","password","message","redirect","admins","id","name","lastname","mail","changeInput","e","setState","target","value","renderRedirect","loginValid","input","response","fetch","json","length","admin","inputPassword","localStorage","setItem","JSON","stringify","loggedAdmin","isValid","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nexport class loginForm extends Component {\r\n    state = {\r\n\r\n        username: \"gurk\",\r\n        password: \"123\",\r\n        message: \"\",\r\n        redirect: false,\r\n        admins: [{\r\n            id: \"-\",\r\n            name: \"-\",\r\n            lastname: \"-\",\r\n            username: \"-\",\r\n            mail: \"-\",\r\n            password: \"-\"\r\n        }]\r\n    };\r\n\r\n\r\n    changeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n\r\n    };\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/index' />\r\n        }\r\n    }\r\n\r\n    loginValid = async () => {\r\n        let input = { username: this.state.username, password: this.state.password }\r\n        const response = await fetch(`/api/admin/getByUsername/${input.username}`)\r\n        const admins = await response.json();\r\n        if (admins.length === 0) {\r\n            this.setState({ message: \"wrong username\", redirect: false });\r\n        } else {\r\n            for (let admin of admins) {\r\n                let inputPassword = input.password;\r\n                let password = admin.password;\r\n\r\n                if (password !== inputPassword) {\r\n                    this.setState({ message: \"wrong password\", redirect: false });\r\n                } else {\r\n                    this.setState({ message: \"\", redirect: true });\r\n                    await localStorage.setItem('currentAdmin', JSON.stringify({ loggedAdmin: admin, isValid: true }));\r\n                   \r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { username, password, message } = this.state\r\n        return (\r\n\r\n            <div className=\"center\" >\r\n                <hr />\r\n                <input id=\"username\"\r\n                    className=\"formCenter\"\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={this.changeInput} />\r\n                <br />\r\n                <input id=\"password\"\r\n                    className=\"formCenter\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={this.changeInput} />\r\n                <button id=\"loginButton\" className=\"formCenter\" onClick={this.loginValid}> Login </button>\r\n                <h6 className=\"formCenter\" id=\"message\" onChange={this.changeInput} >{message}</h6>\r\n                <hr />\r\n                <br />\r\n                <Link className=\"formCenter\" to=\"/signup\" > Sign Up </Link>\r\n                <br />\r\n                <Link className=\"formCenter\" to=\"/forgatpass\" > Forgat Password </Link>\r\n                {this.renderRedirect()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default loginForm\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}