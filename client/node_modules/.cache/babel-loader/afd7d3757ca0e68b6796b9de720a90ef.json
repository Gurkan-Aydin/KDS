{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luminary\\\\Projects\\\\KDS\\\\client\\\\src\\\\components\\\\newPassword.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nexport default class newPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\",\n      password: \"\",\n      rePassword: \"\",\n      redirect: false\n    };\n\n    this.updatePassword = async () => {\n      if (this.state.password === this.state.rePassword) {\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.props.username,\n            type: 'password',\n            value: this.state.password\n          })\n        };\n        await fetch('/api/admin/update', requestOptions);\n        this.setState({\n          redirect: true\n        });\n      } else {\n        this.setState({\n          message: \"Password not match\"\n        });\n      }\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.changeInput = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      message,\n      password,\n      rePassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"formCenter form-control form-control-user\",\n      type: \"text\",\n      id: \"password\",\n      placeholder: \"New Password\",\n      value: password,\n      onChange: this.changeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"formCenter form-control form-control-user\",\n      type: \"text\",\n      id: \"rePassword\",\n      placeholder: \"Re- New Password\",\n      value: rePassword,\n      onChange: this.changeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-user btn-block\",\n      id: \"changePass\",\n      onClick: this.updatePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \" Change Password \"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"formCenter\",\n      id: \"message\",\n      onChange: this.changeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, message), this.renderRedirect());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/luminary/Projects/KDS/client/src/components/newPassword.js"],"names":["React","Component","Redirect","newPassword","state","message","password","rePassword","redirect","updatePassword","requestOptions","method","headers","body","JSON","stringify","username","props","type","value","fetch","setState","renderRedirect","changeInput","e","target","id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default class newPassword extends Component {\r\n    state = {\r\n        message: \"\",\r\n        password: \"\",\r\n        rePassword: \"\",\r\n        redirect: false\r\n    }\r\n\r\n    updatePassword = async () => {\r\n        if (this.state.password === this.state.rePassword) {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username: this.props.username, type: 'password', value: this.state.password })\r\n            };\r\n            await fetch('/api/admin/update', requestOptions);\r\n            this.setState({\r\n                redirect: true\r\n            })\r\n        } else {\r\n            this.setState({ message: \"Password not match\" })\r\n\r\n        }\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/login' />\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { message, password, rePassword } = this.state\r\n        return (\r\n            <div>\r\n                <input className=\"formCenter form-control form-control-user\" type=\"text\" id=\"password\" placeholder=\"New Password\" value={password} onChange={this.changeInput} />\r\n                <input className=\"formCenter form-control form-control-user\" type=\"text\" id=\"rePassword\" placeholder=\"Re- New Password\" value={rePassword} onChange={this.changeInput} />\r\n                <button className=\"btn btn-primary btn-user btn-block\" id=\"changePass\" onClick={this.updatePassword}> Change Password </button>\r\n                <h6 className=\"formCenter\" id=\"message\" onChange={this.changeInput} >{message}</h6>\r\n\r\n                {this.renderRedirect()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}